#!/bin/sh -eu

# Control script for the running eyes daemon

show_usage() {
    echo "Usage: $0 {show|stop|status}"
    echo ""
    echo "Commands:"
    echo "  show   - Show immediate eye break reminder"
    echo "  stop   - Stop the running daemon"
    echo "  status - Check if daemon is running"
    exit 1
}

get_eyes_pid() {
    # Try pidfile first
    if [ -f "/tmp/eyes.pid" ]; then
        PID=$(cat /tmp/eyes.pid 2>/dev/null)
        # Validate PID is still running
        if [ -n "$PID" ] && kill -0 "$PID" 2>/dev/null; then
            echo "$PID"
            return
        else
            # Clean up stale pidfile
            rm -f /tmp/eyes.pid
        fi
    fi
    
    # Fallback to launchctl
    PID=$(launchctl list | grep com.eyes | awk '{print $1}' 2>/dev/null || echo "")
    if [ -n "$PID" ] && [ "$PID" != "-" ]; then
        echo "$PID"
        return
    fi
    
    # Last resort: process search
    PID=$(pgrep -f "eyes.*--interval" 2>/dev/null || echo "")
    echo "$PID"
}

case "${1:-}" in
    show)
        PID=$(get_eyes_pid)
        if [ -n "$PID" ]; then
            echo "Sending show reminder signal to PID $PID..."
            kill -USR1 "$PID"
        else
            echo "Eyes daemon not running"
            exit 1
        fi
        ;;
    stop)
        PID=$(get_eyes_pid)
        if [ -n "$PID" ]; then
            echo "Stopping eyes daemon (PID $PID)..."
            kill -TERM "$PID"
        else
            echo "Eyes daemon not running"
            exit 1
        fi
        ;;
    status)
        PID=$(get_eyes_pid)
        if [ -n "$PID" ]; then
            echo "Eyes daemon running (PID $PID)"
        else
            echo "Eyes daemon not running"
            exit 1
        fi
        ;;
    *)
        show_usage
        ;;
esac